// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/09/2020 10:50:36"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          MU0CPU
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module MU0CPU_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
// wires                                               
wire [15:0] ACC_OUT;
wire ARMISHCARRY;
wire ctrl_mux3;
wire EXEC1;
wire EXEC2;
wire FETCH;
wire [15:0] k;
wire MUXX;
wire [11:0] PC_OUT;
wire pin_name1;
wire [11:0] RAM_ADDRESS_IN;
wire [15:0] RAM_OUT;
wire [15:0] RESULT;
wire skipff_check;
wire [15:0] Testr_1q;
wire [15:0] Testr_2q;
wire [15:0] Testr_3q;

// assign statements (if any)                          
MU0CPU i1 (
// port map - connection between master ports and signals/registers   
	.ACC_OUT(ACC_OUT),
	.ARMISHCARRY(ARMISHCARRY),
	.CLK(CLK),
	.ctrl_mux3(ctrl_mux3),
	.EXEC1(EXEC1),
	.EXEC2(EXEC2),
	.FETCH(FETCH),
	.k(k),
	.MUXX(MUXX),
	.PC_OUT(PC_OUT),
	.pin_name1(pin_name1),
	.RAM_ADDRESS_IN(RAM_ADDRESS_IN),
	.RAM_OUT(RAM_OUT),
	.RESULT(RESULT),
	.skipff_check(skipff_check),
	.Testr_1q(Testr_1q),
	.Testr_2q(Testr_2q),
	.Testr_3q(Testr_3q)
);
initial 
begin 
#1000000 $finish;
end 

// CLK
initial
begin
	CLK = 1'b1;
	CLK = #10000 1'b0;
	# 10000;
	repeat(48)
	begin
		CLK = 1'b1;
		CLK = #10000 1'b0;
		# 10000;
	end
	CLK = 1'b1;
	CLK = #10000 1'b0;
end 
endmodule

